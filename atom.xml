<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Where am I]]></title>
  <link href="http://chrishyx.github.com/atom.xml" rel="self"/>
  <link href="http://chrishyx.github.com/"/>
  <updated>2013-02-06T01:02:42+08:00</updated>
  <id>http://chrishyx.github.com/</id>
  <author>
    <name><![CDATA[yaxin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[long varchar in DB2]]></title>
    <link href="http://chrishyx.github.com/blog/2013/02/06/long-varchar-in-db2/"/>
    <updated>2013-02-06T00:55:00+08:00</updated>
    <id>http://chrishyx.github.com/blog/2013/02/06/long-varchar-in-db2</id>
    <content type="html"><![CDATA[<p>DB2 中LONG VARCHAR 与VARCHAR 数据类型都用来存储长文本，但是它们之间的用法有很大不同。VARCHAR 与普通数据类型一样，要使用到bufferpool，在创建表时受制于最大的bufferpool page size，而LONG VARCHAR 则与LOB数据一样，有单独的存储区域，不需要使用bufferpool，所以在创建表时也不需要有大的bufferpool存在，在访问这些数据时，直接操作磁盘IO进行存取，所以速度更快。但LONG VARCHAR 数据类型的使用也相应受到限制，不能用在以下语句中：</p>

<ul>
<li>DISTINCT</li>
<li>GROUP BY</li>
<li>ORDER BY</li>
<li>BETWEEN/IN</li>
<li>LIKE</li>
<li>子查询内部</li>
<li>列函数中</li>
</ul>


<p>LONG VARCHAR 允许的数据最大长度为32700字节，VARCHAR 最大允许32672字节。在CLP与CE中操作LONG VARCHAR 会有一些不期盼的事情发生，比如对于长度大于8192字节的LONG VARCHAR列使用以下语句，会导致截断，并且不给出任何warning。</p>

<p><code>SELECT longvarchar FROM table</code>
使用以下语句也是不安全的，因为一旦列长度超出VARCHAR 允许的最大长度32672，语句将会失败。</p>

<p><code>SELECT VARCHAR(longvarchar) FROM table</code>
安全的写法是使用表达式CAST.</p>

<p><code>SELECT CAST(langvarchar AS VARCHAR(32672)) FROM table</code>
以上内容适用于DB2 版本8以及版本9。</p>

<p>longvarchar 字段在where条件中可以用like，不能用＝。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[db2 install]]></title>
    <link href="http://chrishyx.github.com/blog/2013/02/06/db2-install/"/>
    <updated>2013-02-06T00:35:00+08:00</updated>
    <id>http://chrishyx.github.com/blog/2013/02/06/db2-install</id>
    <content type="html"><![CDATA[<p>曾经遇到一个项目指定使用DB2作为数据库，为此曾经尝试过在ubuntu、centos、windows下安装DB2，以及在线备份等。可惜长时间不用现在也都忘的七七八八了。不过，DB2这种数据库，忘了也罢，哈哈。。。</p>

<h2>ubuntu下安装</h2>

<p>很多人说一定要以root用户，否则不能启动控制中心。我不理解什么意思是sudo su - root，还是直接sudo就可以，反正我两种方法都没有试成功。
那就直接sudo ./db2_setup吧，一步步安装下来。</p>

<p>不要开启Ubuntu的特效，否则无法显示图形界面。</p>

<p>至于打开控制中心，可以这样做：
在一个shell运行xhost+
然后在另一个shell用实例用户登录，再export DISPALY=:0.0，就可以打开db2cc了。</p>

<p>启动的时候需要先以dasusr1用户启动db2admin，db2admin start。
再以db2inst1用户启动db2，db2start。</p>

<p>安装完成之后默认情况下貌似会有密码的问题</p>

<p>将/etc/pam.d/common-password文件中下面这行：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>password success=1 default=ignore pam_unix.so obscure sha512 </span></code></pre></td></tr></table></div></figure>


<p>替换成：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>password success=1 default=ignore pam_unix.so obscure md5 </span></code></pre></td></tr></table></div></figure>


<p>在SHELL中运行passwd命令更改密码。</p>

<p>因为ubuntu操作系统对密码采取了不同的HASH算法，很可能HASH后的密码串长度超过了DB2支持的最长密码长度。 所以将sha512的HASH算法改为sha256或者md5算法。</p>

<h2>windows7下安装</h2>

<p>以管理员权限运行安装程序，否则会出错，安装不成功。
安装完成后将用户添加到DB2ADMNS和DB2USER用户组，否则启动的时候会出错。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用iframe实现download]]></title>
    <link href="http://chrishyx.github.com/blog/2013/02/06/shi-yong-iframeshi-xian-download/"/>
    <updated>2013-02-06T00:12:00+08:00</updated>
    <id>http://chrishyx.github.com/blog/2013/02/06/shi-yong-iframeshi-xian-download</id>
    <content type="html"><![CDATA[<p>现代web项目中，下载无疑是最基本最普遍的功能之一，只是在以一些纯js框架（例如ExtJS，现在貌似叫sencha了）生成的界面中，不方便直接用超链接的方式去实现下载，那么我们可以在页面中隐藏一个iframe，然后在js中需要的地方去给iframe赋予一个url。具体实现如下：</p>

<p>jsp代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="nx">iframe</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;downloadiframe&quot;</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>js代码（以ExtJS3为例）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">downloadiframe</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="o">=</span><span class="s2">&quot;../../xxxx.do&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>java代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">response</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">&quot;gb2312&quot;</span><span class="o">);</span><span class="c1">//处理中文</span>
</span><span class='line'><span class="n">response</span><span class="o">.</span><span class="na">reset</span><span class="o">();</span>
</span><span class='line'><span class="n">response</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="s">&quot;application/x-download&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">String</span> <span class="n">path</span> <span class="o">=</span> <span class="n">outfile</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">();</span>
</span><span class='line'><span class="kt">int</span> <span class="n">last1</span> <span class="o">=</span> <span class="n">path</span><span class="o">.</span><span class="na">lastIndexOf</span><span class="o">(</span><span class="s">&quot;\\&quot;</span><span class="o">);</span>
</span><span class='line'><span class="kt">int</span> <span class="n">last2</span> <span class="o">=</span> <span class="n">path</span><span class="o">.</span><span class="na">lastIndexOf</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">String</span> <span class="n">filedisplay</span> <span class="o">=</span> <span class="n">path</span><span class="o">.</span><span class="na">substring</span><span class="o">((</span><span class="n">last1</span> <span class="o">&gt;</span> <span class="n">last2</span> <span class="o">?</span> <span class="n">last1</span> <span class="o">:</span> <span class="n">last2</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'><span class="n">filedisplay</span> <span class="o">=</span> <span class="n">URLEncoder</span><span class="o">.</span><span class="na">encode</span><span class="o">(</span><span class="n">filedisplay</span><span class="o">,</span> <span class="s">&quot;UTF-8&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">response</span><span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">&quot;Content-Disposition&quot;</span><span class="o">,</span> <span class="s">&quot;attachment;filename=&quot;</span> <span class="o">+</span> <span class="n">filedisplay</span><span class="o">);</span>
</span><span class='line'><span class="n">OutputStream</span> <span class="n">outp</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'><span class="n">FileInputStream</span> <span class="n">in</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'><span class="n">File</span> <span class="n">fp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">path</span><span class="o">);</span>
</span><span class='line'><span class="k">try</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">outp</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">();</span>
</span><span class='line'>  <span class="n">in</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="n">fp</span><span class="o">);</span>
</span><span class='line'>  <span class="kt">byte</span><span class="o">[]</span> <span class="n">b</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="mi">1024</span><span class="o">];</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>  <span class="k">while</span> <span class="o">((</span><span class="n">i</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">b</span><span class="o">))</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">outp</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">b</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">i</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="n">outp</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">in</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>  <span class="n">outp</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[eclipse shortcuts]]></title>
    <link href="http://chrishyx.github.com/blog/2013/02/05/eclipse-shortcuts/"/>
    <updated>2013-02-05T23:56:00+08:00</updated>
    <id>http://chrishyx.github.com/blog/2013/02/05/eclipse-shortcuts</id>
    <content type="html"><![CDATA[<p>来自网络转载，留下经常看看，eclipse依然是我使用最多的IDE，只是eclipse越来越慢，让人愈发的失望。</p>

<p>Ctrl+1 快速修复(最经典的快捷键,就不用多说了)</p>

<p>Ctrl+D: 删除当前行</p>

<p>Ctrl+Alt+↓ 复制当前行到下一行(复制增加)</p>

<p>Ctrl+Alt+↑ 复制当前行到上一行(复制增加)</p>

<!-- more -->


<p>Alt+↓ 当前行和下面一行交互位置(特别实用,可以省去先剪切,再粘贴了)</p>

<p>Alt+↑ 当前行和上面一行交互位置(同上)</p>

<p>Alt+← 前一个编辑的页面</p>

<p>Alt+→ 下一个编辑的页面(当然是针对上面那条来说了)</p>

<p>Alt+Enter 显示当前选择资源(工程,or 文件 or文件)的属性</p>

<p>Shift+Enter 在当前行的下一行插入空行(这时鼠标可以在当前行的任一位置,不一定是最后)</p>

<p>Shift+Ctrl+Enter 在当前行插入空行(原理同上条)</p>

<p>Ctrl+Q 定位到最后编辑的地方</p>

<p>Ctrl+L 定位在某行 (对于程序超过100的人就有福音了)</p>

<p>Ctrl+M 最大化当前的Edit或View (再按则反之)</p>

<p>Ctrl+/ 注释当前行,再按则取消注释</p>

<p>Ctrl+O 快速显示 OutLine</p>

<p>Ctrl+T 快速显示当前类的继承结构</p>

<p>Ctrl+W 关闭当前Editer</p>

<p>Ctrl+K 参照选中的Word快速定位到下一个</p>

<p>Ctrl+E 快速显示当前Editer的下拉列表(如果当前页面没有显示的用黑体表示)</p>

<p>Ctrl+/(小键盘) 折叠当前类中的所有代码</p>

<p>Ctrl+×(小键盘) 展开当前类中的所有代码</p>

<p>Ctrl+Space 代码助手完成一些代码的插入(但一般和输入法有冲突,可以修改输入法的热键,也可以暂用Alt+/来代替)</p>

<p>Ctrl+Shift+E 显示管理当前打开的所有的View的管理器(可以选择关闭,激活等操作)</p>

<p>Ctrl+J 正向增量查找(按下Ctrl+J后,你所输入的每个字母编辑器都提供快速匹配定位到某个单词,如果没有,则在stutes
line中显示没有找到了,查一个单词时,特别实用,这个功能Idea两年前就有了)</p>

<p>Ctrl+Shift+J 反向增量查找(和上条相同,只不过是从后往前查)</p>

<p>Ctrl+Shift+F4 关闭所有打开的Editer</p>

<p>Ctrl+Shift+X 把当前选中的文本全部变味小写</p>

<p>Ctrl+Shift+Y 把当前选中的文本全部变为小写</p>

<p>Ctrl+Shift+F 格式化当前代码</p>

<p>Ctrl+Shift+P 定位到对于的匹配符(譬如{}) (从前面定位后面时,光标要在匹配符里面,后面到前面,则反之)</p>

<p>下面的快捷键是重构里面常用的,本人就自己喜欢且常用的整理一下(注:一般重构的快捷键都是Alt+Shift开头的了)</p>

<p>Alt+Shift+R 重命名 (是我自己最爱用的一个了,尤其是变量和类的Rename,比手工方法能节省很多劳动力)</p>

<p>Alt+Shift+M 抽取方法 (这是重构里面最常用的方法之一了,尤其是对一大堆泥团代码有用)</p>

<p>Alt+Shift+C 修改函数结构(比较实用,有N个函数调用了这个方法,修改一次搞定)</p>

<p>Alt+Shift+L 抽取本地变量( 可以直接把一些魔法数字和字符串抽取成一个变量,尤其是多处调用的时候)</p>

<p>Alt+Shift+F 把Class中的local变量变为field变量 (比较实用的功能)</p>

<p>Alt+Shift+I 合并变量(可能这样说有点不妥Inline)</p>

<p>Alt+Shift+V 移动函数和变量(不怎么常用)</p>

<p>Alt+Shift+Z 重构的后悔药(Undo)</p>

<p>编辑</p>

<p>作用域 功能 快捷键</p>

<p>全局 查找并替换 Ctrl+F</p>

<p>文本编辑器 查找上一个 Ctrl+Shift+K</p>

<p>文本编辑器 查找下一个 Ctrl+K</p>

<p>全局 撤销 Ctrl+Z</p>

<p>全局 复制 Ctrl+C</p>

<p>全局 恢复上一个选择 Alt+Shift+↓</p>

<p>全局 剪切 Ctrl+X</p>

<p>全局 快速修正 Ctrl1+1</p>

<p>全局 内容辅助 Alt+/</p>

<p>全局 全部选中 Ctrl+A</p>

<p>全局 删除 Delete</p>

<p>全局 上下文信息 Alt+？</p>

<p>Alt+Shift+?</p>

<p>Ctrl+Shift+Space</p>

<p>Java编辑器 显示工具提示描述 F2</p>

<p>Java编辑器 选择封装元素 Alt+Shift+↑</p>

<p>Java编辑器 选择上一个元素 Alt+Shift+←</p>

<p>Java编辑器 选择下一个元素 Alt+Shift+→</p>

<p>文本编辑器 增量查找 Ctrl+J</p>

<p>文本编辑器 增量逆向查找 Ctrl+Shift+J</p>

<p>全局 粘贴 Ctrl+V</p>

<p>全局 重做 Ctrl+Y</p>

<p>查看</p>

<p>作用域 功能 快捷键</p>

<p>全局 放大 Ctrl+=</p>

<p>全局 缩小 Ctrl+-</p>

<p>窗口</p>

<p>作用域 功能 快捷键</p>

<p>全局 激活编辑器 F12</p>

<p>全局 切换编辑器 Ctrl+Shift+W</p>

<p>全局 上一个编辑器 Ctrl+Shift+F6</p>

<p>全局 上一个视图 Ctrl+Shift+F7</p>

<p>全局 上一个透视图 Ctrl+Shift+F8</p>

<p>全局 下一个编辑器 Ctrl+F6</p>

<p>全局 下一个视图 Ctrl+F7</p>

<p>全局 下一个透视图 Ctrl+F8</p>

<p>文本编辑器 显示标尺上下文菜单 Ctrl+W</p>

<p>全局 显示视图菜单 Ctrl+F10</p>

<p>全局 显示系统菜单 Alt+-</p>

<p>导航</p>

<p>作用域 功能 快捷键</p>

<p>Java编辑器 打开结构 Ctrl+F3</p>

<p>全局 打开类型 Ctrl+Shift+T</p>

<p>全局 打开类型层次结构 F4</p>

<p>全局 打开声明 F3</p>

<p>全局 打开外部javadoc Shift+F2</p>

<p>全局 打开资源 Ctrl+Shift+R</p>

<p>全局 后退历史记录 Alt+←</p>

<p>全局 前进历史记录 Alt+→</p>

<p>全局 上一个 Ctrl+,</p>

<p>全局 下一个 Ctrl+.</p>

<p>Java编辑器 显示大纲 Ctrl+O</p>

<p>全局 在层次结构中打开类型 Ctrl+Shift+H</p>

<p>全局 转至匹配的括号 Ctrl+Shift+P</p>

<p>全局 转至上一个编辑位置 Ctrl+Q</p>

<p>Java编辑器 转至上一个成员 Ctrl+Shift+↑</p>

<p>Java编辑器 转至下一个成员 Ctrl+Shift+↓</p>

<p>文本编辑器 转至行 Ctrl+L</p>

<p>搜索</p>

<p>作用域 功能 快捷键</p>

<p>全局 出现在文件中 Ctrl+Shift+U</p>

<p>全局 打开搜索对话框 Ctrl+H</p>

<p>全局 工作区中的声明 Ctrl+G</p>

<p>全局 工作区中的引用 Ctrl+Shift+G</p>

<p>文本编辑</p>

<p>作用域 功能 快捷键</p>

<p>文本编辑器 改写切换 Insert</p>

<p>文本编辑器 上滚行 Ctrl+↑</p>

<p>文本编辑器 下滚行 Ctrl+↓</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ubuntu下内核更新以后virtualbox的重配置]]></title>
    <link href="http://chrishyx.github.com/blog/2013/02/05/ubuntuxia-nei-he-geng-xin-yi-hou-virtualboxde-zhong-pei-zhi/"/>
    <updated>2013-02-05T23:47:00+08:00</updated>
    <id>http://chrishyx.github.com/blog/2013/02/05/ubuntuxia-nei-he-geng-xin-yi-hou-virtualboxde-zhong-pei-zhi</id>
    <content type="html"><![CDATA[<p>随着 Ubuntu 系统内核的更新，VirtualBox 原有的内核模块已经不再适用。于是，VirtualBox 将无法正常使用。需要重新安装 VirtualBox 吗？当然不必。我们只需重新稍加配置即可。</p>

<p>首先获取与当前内核版本相一致的头文件：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install linux-headers-`uname -r` </span></code></pre></td></tr></table></div></figure>


<p>接着，我们来重新编译 VirtualBox 内核模块，这可以使用下面的指令完成：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo /etc/init.d/vboxdrv setup </span></code></pre></td></tr></table></div></figure>


<p>一旦编译完成，程序将会自动启动 vboxdrv 内核模块。此时，再用 VirtualBox 也就没有什么问题了。如果以后遇到内核再次重新的情况，则如法炮制即可解决。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hello octopress]]></title>
    <link href="http://chrishyx.github.com/blog/2013/02/01/hello-octopress/"/>
    <updated>2013-02-01T00:39:00+08:00</updated>
    <id>http://chrishyx.github.com/blog/2013/02/01/hello-octopress</id>
    <content type="html"><![CDATA[<p>This is my first octopress blog!</p>

<!-- more -->


<p>曾经csdn、javaeye、oschina和自己搭建的wordpress上都陆续写过或者转载过一些博客，却一直没有坚持下来，一方面是自己的懒惰，另一面没有特别合适的方式也是个问题。这次把以前所有blog里有价值的东西整理到这儿来，以后好好耕耘这个自留地。</p>
]]></content>
  </entry>
  
</feed>
